// S√©lection de tous les √©l√©ments avec la classe 'favorite-toggle'
const toggles = document.querySelectorAll('.favorite-toggle');

// S√©lection de tous les √©l√©ments avec la classe 'delete-button'
const deleteButtons = document.querySelectorAll('.delete-button');

// Parcours de chaque bouton de basculement de favori
for (let button of toggles) {
    // Ajout d'un √©couteur d'√©v√©nement pour le clic sur chaque bouton
    button.addEventListener('click', function(event) {
        // Emp√™che le comportement par d√©faut du bouton
        event.preventDefault();

        // Trouve l'√©l√©ment parent 'li' avec l'attribut 'data-message-id'
        const li = button.closest('li[data-message-id]');

        // R√©cup√®re l'ID du message √† partir de l'attribut 'data-message-id'
        const messageId = li.getAttribute('data-message-id');

        // Envoie une requ√™te POST pour basculer l'√©tat de favori du message
        fetch(`/messages/toggle-favorite/${messageId}`, {
            method: 'POST' // M√©thode HTTP POST
        })
            .then(function(response) {
                // V√©rifie si la r√©ponse est OK, sinon l√®ve une erreur
                if (!response.ok) {
                    throw new Error('Erreur r√©seau');
                }
                // Convertit la r√©ponse en JSON
                return response.json();
            })
            .then(function(data) {
                // V√©rifie si la requ√™te a r√©ussi
                if (data.success) {
                    // Met √† jour l'ic√¥ne du bouton en fonction de l'√©tat de favori
                    button.textContent = data.isFavorite ? '‚ù§Ô∏è' : 'ü§ç';
                } else {
                    // Affiche une alerte en cas d'erreur lors de la mise √† jour du favori
                    alert('Erreur lors de la mise √† jour du favori');
                }
            })
            .catch(function(error) {
                // Affiche une erreur dans la console et une alerte en cas d'√©chec de la requ√™te
                console.error('Erreur fetch:', error);
                alert('Erreur lors de la requ√™te');
            });
    });
}

// Parcours de chaque bouton de suppression
for (let button of deleteButtons) {
    // Ajout d'un √©couteur d'√©v√©nement pour le clic sur chaque bouton
    button.addEventListener('click', function(e) {
        // Emp√™che le comportement par d√©faut du bouton
        e.preventDefault();

        // R√©cup√®re l'ID du message √† partir de l'attribut 'data-id'
        const messageId = button.dataset.id;

        // R√©cup√®re le token CSRF √† partir de l'attribut 'data-csrf'
        const csrfToken = button.dataset.csrf;

        // Demande confirmation avant de supprimer le message
        if (!confirm("Voulez-vous vraiment supprimer ce message ?")) return;

        // Envoie une requ√™te POST pour supprimer le message
        fetch(`/messages/${messageId}/delete`, {
            method: 'POST', // M√©thode HTTP POST
            headers: {
                'Content-Type': 'application/json', // Type de contenu de la requ√™te
                'X-Requested-With': 'XMLHttpRequest', // Indique que la requ√™te est une requ√™te AJAX
                'X-CSRF-TOKEN': csrfToken // Token CSRF pour la s√©curit√©
            },
            body: JSON.stringify({}) // Corps de la requ√™te vide
        })
            .then(function(response) {
                // V√©rifie si la r√©ponse est OK, sinon l√®ve une erreur
                if (!response.ok) {
                    throw new Error('√âchec de la requ√™te');
                }
                // Convertit la r√©ponse en JSON
                return response.json();
            })
            .then(function(data) {
                // V√©rifie si la suppression a r√©ussi
                if (data.success) {
                    // Supprime l'√©l√©ment du message de la liste
                    button.closest('.message-item').remove();
                } else {
                    // Affiche une alerte en cas d'erreur lors de la suppression
                    alert("Erreur : " + (data.error || "Suppression impossible"));
                }
            })
            .catch(function(error) {
                // Affiche une erreur dans la console et une alerte en cas d'√©chec de la requ√™te
                console.error('Erreur fetch :', error);
                alert("Une erreur est survenue.");
            });
    });
}
